// <auto-generated />
using System;
using Jorkol.GameDataApi.ApexLegends.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameDataApi.Migrations
{
    [DbContext(typeof(ApexDbContext))]
    partial class ApexDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Jorkol.GameDataApi.ApexLegends.Models.ApexCharacter", b =>
                {
                    b.Property<long>("ApexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ApexId");

                    b.ToTable("ApexCharacter");
                });

            modelBuilder.Entity("Jorkol.GameDataApi.ApexLegends.Models.ApexMatch", b =>
                {
                    b.Property<byte[]>("ApexMatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<long?>("CharacterApexId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Damage")
                        .HasColumnType("bigint");

                    b.Property<long?>("DomeDamageBlocked")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("EyeEnemiesScanned")
                        .HasColumnType("bigint");

                    b.Property<long?>("Headshots")
                        .HasColumnType("bigint");

                    b.Property<long?>("Kills")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlayerLevel")
                        .HasColumnType("bigint");

                    b.Property<long?>("RankScore")
                        .HasColumnType("bigint");

                    b.Property<long?>("RankScoreChange")
                        .HasColumnType("bigint");

                    b.Property<long?>("Revives")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiftsSquadmatesPhased")
                        .HasColumnType("bigint");

                    b.Property<long?>("SmokeGrenadeEnemiesHit")
                        .HasColumnType("bigint");

                    b.HasKey("ApexMatchId");

                    b.HasIndex("CharacterApexId");

                    b.ToTable("ApexMatches");
                });

            modelBuilder.Entity("Jorkol.GameDataApi.ApexLegends.Models.ApexMatch", b =>
                {
                    b.HasOne("Jorkol.GameDataApi.ApexLegends.Models.ApexCharacter", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterApexId");

                    b.Navigation("Character");
                });
#pragma warning restore 612, 618
        }
    }
}
